name: CI

# 워크플로 트리거: main 브랜치로의 push 혹은 PR
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 설정 (Temurin 17)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      # 3. Maven 의존성 캐시
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      # 4. Maven 빌드 및 테스트
      - name: Build & test with Maven
        run: mvn clean verify -B


  #실행테스트
  smoke-test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # 1. 빌드 결과를 받아오려면 다시 체크아웃 (artifact 공유 설정이 없다면)
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 설정 (Temurin 21)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      # 3. 패키징
      - name: Package application
        run: mvn package -DskipTests -B

      # 4. 백그라운드로 애플리케이션 실행
      - name: Run application in background
        run: |
          nohup java -jar target/*.jar > app.log 2>&1 & echo $! > app.pid

      # 5. 기동 대기
      - name: Wait for application to start
        run: sleep 30

      # 6. 헬스 체크 엔드포인트 호출
      - name: Check health endpoint
        run: curl --fail http://localhost:8080/actuator/health

      # 7. 애플리케이션 종료
      - name: Stop application
        run: kill $(cat app.pid)