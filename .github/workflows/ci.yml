name: CI

# 워크플로 트리거: main 브랜치로의 push 혹은 PR
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 설정 (Temurin 17)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      # 3. Maven 의존성 캐시
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      # 4. Maven 빌드 및 테스트
      - name: Build & test with Maven
        run: mvn clean verify -B


  # 배포용 예시 (main 브랜치에만 동작)
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # SSH 키를 이용해 서버에 접속하여 배포 스크립트 실행
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Deploy to server
        run: ssh -o StrictHostKeyChecking=no user@your.server.com '
          cd /path/to/app &&
          git pull origin main &&
          ./gradlew bootJar &&
          sudo systemctl restart your-app.service
